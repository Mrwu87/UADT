---
- hosts: deploy_ip
  gather_facts:  false
  tasks:
    - name: rm -rf charts.txt
      command: rm -rf {{ inventory_dir }}/Stepfiles/cloudbrain/charts.txt

   # helm 需要指定crt文件  https://helm.sh/zh/docs/helm/helm/
    # $KUBECONFIG	设置Kubernetes的可选配置文件(默认是"~/.kube/config")
    # $HELM_KUBECAFILE	设置Kubernetes证书机构文件   HELM_KUBECAFILE=~/.kube/ca.crt
    # $HELM_KUBECONTEXT	设置kubeconfig上下文的名称  HELM_KUBECONTEXT=kubernetes-admin@cluster.local
#    - name: env var
#      shell:
#       cmd: |
#          echo '''KUBECONFIG=~/.kube/config
#          HELM_KUBECAFILE=~/.kube/ca.crt
#          HELM_KUBECONTEXT=kubernetes-admin@cluster.local
#          ''' >>  ~/.profile
#
#      args:
#          creates:  "{{ inventory_dir }}/Stepfiles/cloudbrain/docker-key-ready"

#    - name: source env
#      shell:  /bin/bash -c "source ~/.profile"


    - name: upload image/chart to harbor
      command: "python3 {{ inventory_dir }}/Stepfiles/cloudbrain/tag.py {{ deployip }}:31150 {{ inventory_dir }}/Stepfiles/cloudbrain/    {{ inventory_dir }}/Playbooks/images/cloudbrain/chart/  "

#    - name: configure the service config file
#      command: bash {{ inventory_dir }}/Stepfiles/cloudbrain/change_harbor_registry.sh  {{ deployip }}:31150

    - name: change helmfile registry
      shell: sed -i "s%https://reg.uisee.ai%http://{{ deployip }}:31150%g"  {{ inventory_dir }}/Stepfiles/cloudbrain/helmfile.yaml
    #new create ns
    - name: create  ns
      ignore_errors: yes
      command: kubectl create ns {{ namespace }}


    - name: template version.yaml
      template:
        src:  version.j2
        dest: "{{ inventory_dir }}/Stepfiles/cloudbrain/version.yaml"

    - name: create  k8s  serct
      command: kubectl create secret docker-registry docker-reg-secret -n {{ namespace }} --docker-server={{ deployip }}:31150 --docker-username=admin --docker-password=uisee123.
      args:
        creates: "{{ inventory_dir }}/Stepfiles/cloudbrain/docker-key-ready"

    - name: helmfile deploy cluster
      shell: touch {{ inventory_dir }}/Stepfiles/cloudbrain/docker-key-ready

    - name: change harbor registry
      shell: "chdir={{ inventory_dir }}/Stepfiles/cloudbrain/ bash change_harbor_registry.sh {{ deployip }}:31150 {{ ingressdomain }} {{ clustername }} {{ namespace }}"

    - name: update
      shell: helm repo update


- hosts: server
  gather_facts:  false
  tasks:
    - name: pull busybox image
      shell: sudo docker pull {{ deployip }}:31150/library/busybox:1.30.1

    - name: tag busybox to latest
      shell: sudo docker tag {{ deployip }}:31150/library/busybox:1.30.1 busybox:latest


- hosts: deploy_ip
  gather_facts:  false
  tasks:
    - name: get blockdevice info
      shell:  kubectl get bd -n openebs | grep Active | awk '{print $1,$2}' > {{ inventory_dir }}/Stepfiles/openebs/cstor/blockdevice.txt

    - name: insert python script
      shell: python3 {{ inventory_dir }}/Stepfiles/openebs/cstor/blockdevice.py  {{ inventory_dir }}/Stepfiles/openebs/cstor

    - name: create cstor poll
      shell: kubectl apply -f {{ inventory_dir }}/Stepfiles/openebs/cstor/cstor_pool.yaml

    - name: apply cstor storageclass yaml
      shell: kubectl apply -f {{ inventory_dir }}/Stepfiles/openebs/cstor/cstor-sc.yaml

#    - name: create cstor nfs yaml
#      shell: kubectl apply -f {{ inventory_dir }}/Stepfiles/openebs/cstor/cstor-nfs.yaml
    - name: create ns nfs
      command: kubectl create ns nfs
      ignore_errors: yes

    - name: helm install nfs
      shell: helm install  {{ inventory_dir }}/Stepfiles/openebs/nfs-server/nfs-server-provisioner-1.1.3.tgz  --generate-name   --namespace=nfs  --set=persistence.enabled=true,persistence.storageClass=cstor-csi-disk,persistence.size={{ nfssize }},storageClass.name=managed-nfs-storage,storageClass.provisionerName=openebs.io/nfs  >>  ~/UADT/mods/logs/config/runtime 2>&1






